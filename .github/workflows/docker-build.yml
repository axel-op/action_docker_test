name: Docker image update

on:
  push:
    branches:
      - 'stable'
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build and push Docker image
        env:
          IMAGE: axelop/dart_package_analyzer
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          EVENT: ${{ github.event_name }}
          GIT_FLUTTER: git://github.com/flutter/flutter.git
          API_ADDRESS: https://registry-1.docker.io/v2
          PANA_DOC: https://pub.dev/api/documentation/pana
        run: |
          FLUTTER_SHA=$(git ls-remote $GIT_FLUTTER refs/heads/stable | cut -f 1)
          PANA_VERSION=$(curl -s $PANA_DOC | jq -r '.latestStableVersion')
          echo $DOCKER_TOKEN | sudo docker login --username=axelop --password-stdin
          API_TOKEN=$(curl -s "https://auth.docker.io/token?scope=repository:$IMAGE:pull&service=registry.docker.io" | jq -r '.token')
          DIGEST=$(curl -s -H "Authorization: Bearer $API_TOKEN" -H "Accept: application/vnd.docker.distribution.manifest.v2+json" "$API_ADDRESS/$IMAGE/manifests/latest" | jq -r '.config.digest')
          CONFIG=$(curl -s -L -H "Authorization: Bearer $API_TOKEN" "$API_ADDRESS/$IMAGE/blobs/$DIGEST")
          PREVIOUS_SHA=$(jq -r '.config.Labels.fluttersha' <<< $CONFIG)
          PREVIOUS_PANA=$(jq -r '.config.Labels.panaversion' <<< $CONFIG)
          echo $FLUTTER_SHA is the latest commit in the stable branch of Flutter
          echo $PREVIOUS_SHA is the commit of Flutter on Docker image
          echo $PANA_VERSION is the latest stable version of pana
          echo $PREVIOUS_PANA is the version of pana on Docker image
          if [ $EVENT != push ] && [ $FLUTTER_SHA == $PREVIOUS_SHA ] && [ $PANA_VERSION == $PREVIOUS_PANA ]; then echo No need to rebuild; exit 0; fi
          sudo docker build --label "fluttersha=$FLUTTER_SHA" --label "panaversion=$PANA_VERSION" -f Dockerfile-parent -t $IMAGE .
          sudo docker push $IMAGE
